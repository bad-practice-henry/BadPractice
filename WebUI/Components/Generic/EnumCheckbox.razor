@using WebUI.Resources.Constants
@typeparam TEnum
@inject IStringLocalizer<Constants> Localize;

<div class="btn-group btn-group-sm mb-2" role="group">
    @foreach (TEnum value in Enum.GetValues(typeof(TEnum)))
    {
        <input
            type="radio"
            class="btn-check"
            checked="@Equals(value, SelectedValue)"
            id="@value"
            @onchange="() => HandleValueChanged(value)"
            autocomplete="off"/>
        <label class="btn btn-outline-primary" for="@value">
            @Localize[value.ToString()!]
        </label>
    }
</div>

@code {

    [Parameter]
    public TEnum SelectedValue { get; set; } = default!;

    [Parameter]
    public EventCallback<TEnum> ValueChanged { get; set; }

    private async Task HandleValueChanged(object value)
    {
        SelectedValue = (TEnum)value;
        await ValueChanged.InvokeAsync((TEnum)value);
    }

}